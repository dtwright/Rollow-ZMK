/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define COL   0
#define COLL  1
#define COLR  2

#define DEF     0
#define PC      1
#define LOWER   2
#define RAISE   3
#define MOUSE   4
#define ADJUST  5

#define MW_DIST 50

/ {
       behaviors {
            tp: tap_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "TAP_MODS";
                tapping-term-ms = <225>;
                quick-tap-ms = <190>;
                flavor = "balanced";
                #binding-cells = <2>;
                bindings = <&kp>, <&kp>;
            };

            tl: layer_tap {
                compatible = "zmk,behavior-hold-tap";
                label = "LAYER_TAP";
                tapping-term-ms = <225>;
                quick-tap-ms = <190>;
                flavor = "hold-preferred";
                #binding-cells = <2>;
                bindings = <&mo>, <&kp>;
            };

            mmv: behavior_mouse_move {
                compatible = "zmk,behavior-mouse-move";
                label = "MOUSE_MOVE";
                #binding-cells = <1>;
                delay-ms = <0>;
                time-to-max-speed-ms = <200>;
                acceleration-exponent = <2>;
            };

            mwh: behavior_mouse_scroll {
                compatible = "zmk,behavior-mouse-scroll";
                label = "MOUSE_SCROLL";
                #binding-cells = <1>;
                delay-ms = <0>;
                time-to-max-speed-ms = <200>;
                acceleration-exponent = <2>;
            };
        };

        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <LOWER RAISE>;
                then-layer = <ADJUST>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
/* Default
 * .-----------------------------------------.                    .-----------------------------------------.
 * | TAB  |   Q  |   W  |   E  |   R  |   T  |                    |   Y  |   U  |   I  |   O  |   P  | BKSP |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | CTRL |   A  |   S  |   D  |   F  |   G  |                    |   H  |   J  |   K  |   L  |   ;  |   '  |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | SHFT |   Z  |   X  |   C  |   V  |   B  |-------.    .-------|   N  |   M  |   ,  |   .  |   /  | SHFT |
 * '-----------------------------------------/       /     \      \-----------------------------------------'
 *                          |  GUI |  LWR | / Space /       \ Space\  |TT(RS)| Tab  |
 *                          |      |      |/       /         \      \ |      |      |
 *                          '-------------''------'           '------''-------------'
 *
 *   Encoder Left: Up <-> Down
 *   Encoder Right: Left <-> Right
 */
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &mt RGUI SQT
   &tp LGUI TAB   &kp A &kp S &tp LCTRL D &tp LALT F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RCTRL
   &tp LSHFT LPAR &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &tp RSHFT RPAR
                    &kp LALT &mo RAISE &tl MOUSE RET   &tl MOUSE SPACE &tl LOWER BSPC &kp LALT
                        >;

                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };

                pc_layer {
/* PC
 * This is just a tiny overlay that changes a couple mods
 */
                        bindings = <
    &trans        &trans &trans &trans  &trans &trans &trans &trans &trans &trans &trans &kp SQT
    &mt LCTRL TAB &trans &trans &trans  &trans &trans &trans &trans &trans &trans &trans &trans
    &trans        &trans &trans &trans  &trans &trans &trans &trans &trans &trans &trans &trans
                                &kp LGUI  &trans &trans &trans &trans &trans
                        >;
   
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };

                lower_layer {
/* LOWER
 * .-----------------------------------------.                    .-----------------------------------------.
 * |  ESC |   1  |  2   |  3   |  4   |  5   |                    |   6  |   7  |   8  |   9  |   0  | BKSP |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | BTCLR| BT1  | BT2  | BT3  | BT4  | BT5  |                    |  LFT |  DWN |   UP |  RGT |      |      |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | SHFT |      |      |      |      |      |-------.    .-------|      |      |      |      |      |      |
 * '-----------------------------------------/       /     \      \-----------------------------------------'
 *                          |  GUI |      | / Space /       \ Enter\  |      |  ALT |
 *                          |      |      |/       /         \      \ |      |      |
 *                          '-------------''------'           '------''-------------'
 * 
 *   Encoder Left: PG_UP <-> PG_DN
 *   Encoder Right: -
 */
                        bindings = <
   &trans    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5            &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSLH 
   &kp GRAVE &trans  &trans  &trans  &trans &trans      &trans &kp MINUS &kp EQUAL &trans &trans &trans
   &tp LSHIFT LBKT  &trans       &trans       &trans       &trans       &kp LBKT            &kp RBKT   &trans   &trans &trans &trans  &tp RSHIFT RBKT
                                        &kp LGUI     &trans       &kp SPACE         &kp RET &trans &kp RALT
                            >;

                            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };

                raise_layer {
/* RAISE
 * .-----------------------------------------.                    .-----------------------------------------.
 * | ESC  |   !  |   @  |   #  |   $  |   %  |                    |   ^  |   &  |   *  |   (  |   )  | BKSP |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | CTRL |      |      | Prev | Next |      |                    |   -  |   =  |   {  |   }  |  "|" |   `  |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | SHFT |      |      |      |      |      |-------.    .-------|   _  |   +  |   [  |   ]  |   \  |   ~  |
 * '-----------------------------------------/       /     \      \-----------------------------------------'
 *                          | Play |      | / Space /       \ Enter\  |      |  ALT |
 *                          | Paus |      |/       /         \      \ |      |      |
 *                          '------------''------'            '------''-------------'
 *
 *   Encoder Left: -
 *   Encoder Right: VOL_UP <-> VOL_D
 */
                        bindings = <
    &trans  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5            &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp PIPE
    &kp TILDE &trans    &trans  &trans &trans &trans      &trans &kp UNDER &kp PLUS &kp LBKT        &kp RBKT &kp PIPE
    &tp LSHIFT LBRC &trans    &trans  &trans     &trans     &kp LBRC      &kp RBRC    &trans    &trans          &trans   &trans &tp RSHIFT RBRC
                                   &kp LGUI &trans &kp SPACE   &kp RET &trans &kp RALT
                        >;
   
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };

                mouse_layer {
/* MOUSE
 */
                        bindings = <
    &kp ESC &mkp LCLK      &mkp MCLK      &mkp RCLK        &mwh SCROLL_VERT(MW_DIST)  &none             &none    &none     &none     &none     &none &none 
    &none   &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP     &mmv MOVE_RIGHT  &none             &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &none &none
    &none   &none          &none          &mwh SCROLL_HOR(-MW_DIST) &mwh SCROLL_VERT(-MW_DIST) &mwh SCROLL_HOR(MW_DIST) &kp HOME &kp PG_DN &kp PG_UP &kp END   &none &none
                                          &none            &none            &none             &none    &none     &none 
                        >;
   
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };

                adjust_layer {
/* ADJUST
 * .-----------------------------------------.                    .-----------------------------------------.
 * | ESC  |   !  |   @  |   #  |   $  |   %  |                    |   ^  |   &  |   *  |   (  |   )  | BKSP |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | CTRL |      |      | Prev | Next |      |                    |   -  |   =  |   {  |   }  |  "|" |   `  |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | SHFT |      |      |      |      |      |-------.    .-------|   _  |   +  |   [  |   ]  |   \  |   ~  |
 * '-----------------------------------------/       /     \      \-----------------------------------------'
 *                          | Play |      | / Space /       \ Enter\  |      |  ALT |
 *                          | Paus |      |/       /         \      \ |      |      |
 *                          '------------''------'            '------''-------------'
 *
 *   Encoder Left: -
 *   Encoder Right: VOL_UP <-> VOL_D
 */
                        bindings = <
    &trans  &kp C_PREV  &kp C_PP  &kp C_NEXT   &none   &none   &out OUT_TOG &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &tog PC
    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &trans &kp C_VOLUME_DOWN &kp C_VOLUME_UP &trans &trans &trans 
    &kp LSHFT &trans    &trans  &trans     &trans     &trans      &trans    &trans    &trans          &trans   &kp BSLH &kp TILDE
                                   &kp LGUI &trans &kp SPACE   &kp RET &trans &kp RALT
                        >;
   
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };

        };
};
